# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'ui/ui_main.ui'
#
# Created by: PyQt5 UI code generator 5.7.1
#
# WARNING! All changes made in this file will be lost!

from PyQt5 import QtCore, QtGui, QtWidgets

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(710, 683)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(MainWindow.sizePolicy().hasHeightForWidth())
        MainWindow.setSizePolicy(sizePolicy)
        MainWindow.setMinimumSize(QtCore.QSize(450, 450))
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout.setObjectName("gridLayout")
        self.scrollArea = QtWidgets.QScrollArea(self.centralwidget)
        font = QtGui.QFont()
        font.setKerning(True)
        self.scrollArea.setFont(font)
        self.scrollArea.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.scrollArea.setFrameShadow(QtWidgets.QFrame.Raised)
        self.scrollArea.setLineWidth(0)
        self.scrollArea.setWidgetResizable(True)
        self.scrollArea.setObjectName("scrollArea")
        self.scrollAreaWidgetContents = QtWidgets.QWidget()
        self.scrollAreaWidgetContents.setGeometry(QtCore.QRect(0, 0, 686, 608))
        self.scrollAreaWidgetContents.setObjectName("scrollAreaWidgetContents")
        self.gridLayout_4 = QtWidgets.QGridLayout(self.scrollAreaWidgetContents)
        self.gridLayout_4.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_4.setObjectName("gridLayout_4")
        self.tabWidget = QtWidgets.QTabWidget(self.scrollAreaWidgetContents)
        self.tabWidget.setMinimumSize(QtCore.QSize(561, 0))
        self.tabWidget.setAutoFillBackground(False)
        self.tabWidget.setTabPosition(QtWidgets.QTabWidget.North)
        self.tabWidget.setTabShape(QtWidgets.QTabWidget.Triangular)
        self.tabWidget.setUsesScrollButtons(True)
        self.tabWidget.setDocumentMode(False)
        self.tabWidget.setTabsClosable(False)
        self.tabWidget.setTabBarAutoHide(True)
        self.tabWidget.setObjectName("tabWidget")
        self.TaxaSelection = QtWidgets.QWidget()
        self.TaxaSelection.setObjectName("TaxaSelection")
        self.gridLayout_7 = QtWidgets.QGridLayout(self.TaxaSelection)
        self.gridLayout_7.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_7.setObjectName("gridLayout_7")
        self.frame = QtWidgets.QFrame(self.TaxaSelection)
        self.frame.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.frame.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.frame.setLineWidth(0)
        self.frame.setObjectName("frame")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.frame)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.labelExportFile = QtWidgets.QLabel(self.frame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.labelExportFile.sizePolicy().hasHeightForWidth())
        self.labelExportFile.setSizePolicy(sizePolicy)
        self.labelExportFile.setObjectName("labelExportFile")
        self.gridLayout_2.addWidget(self.labelExportFile, 0, 0, 1, 1)
        self.treeWidget = QtWidgets.QTreeWidget(self.frame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.treeWidget.sizePolicy().hasHeightForWidth())
        self.treeWidget.setSizePolicy(sizePolicy)
        self.treeWidget.setMinimumSize(QtCore.QSize(0, 150))
        self.treeWidget.setMouseTracking(False)
        self.treeWidget.setEditTriggers(QtWidgets.QAbstractItemView.DoubleClicked|QtWidgets.QAbstractItemView.EditKeyPressed|QtWidgets.QAbstractItemView.SelectedClicked)
        self.treeWidget.setDragEnabled(True)
        self.treeWidget.setDragDropOverwriteMode(False)
        self.treeWidget.setDragDropMode(QtWidgets.QAbstractItemView.NoDragDrop)
        self.treeWidget.setDefaultDropAction(QtCore.Qt.MoveAction)
        self.treeWidget.setAlternatingRowColors(True)
        self.treeWidget.setSelectionMode(QtWidgets.QAbstractItemView.ExtendedSelection)
        self.treeWidget.setIndentation(10)
        self.treeWidget.setRootIsDecorated(True)
        self.treeWidget.setAnimated(True)
        self.treeWidget.setWordWrap(True)
        self.treeWidget.setObjectName("treeWidget")
        self.treeWidget.header().setVisible(True)
        self.treeWidget.header().setCascadingSectionResizes(False)
        self.treeWidget.header().setDefaultSectionSize(60)
        self.treeWidget.header().setHighlightSections(True)
        self.treeWidget.header().setMinimumSectionSize(5)
        self.treeWidget.header().setSortIndicatorShown(True)
        self.gridLayout_2.addWidget(self.treeWidget, 5, 0, 1, 3)
        self.butSelectOutput = QtWidgets.QPushButton(self.frame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.butSelectOutput.sizePolicy().hasHeightForWidth())
        self.butSelectOutput.setSizePolicy(sizePolicy)
        self.butSelectOutput.setObjectName("butSelectOutput")
        self.gridLayout_2.addWidget(self.butSelectOutput, 0, 2, 1, 1)
        self.lineOutputFilename = QtWidgets.QLineEdit(self.frame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.lineOutputFilename.sizePolicy().hasHeightForWidth())
        self.lineOutputFilename.setSizePolicy(sizePolicy)
        self.lineOutputFilename.setText("")
        self.lineOutputFilename.setObjectName("lineOutputFilename")
        self.gridLayout_2.addWidget(self.lineOutputFilename, 0, 1, 1, 1)
        self.labelBatch = QtWidgets.QLabel(self.frame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.labelBatch.sizePolicy().hasHeightForWidth())
        self.labelBatch.setSizePolicy(sizePolicy)
        self.labelBatch.setObjectName("labelBatch")
        self.gridLayout_2.addWidget(self.labelBatch, 1, 0, 1, 1)
        self.butGenerateSp = QtWidgets.QPushButton(self.frame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.butGenerateSp.sizePolicy().hasHeightForWidth())
        self.butGenerateSp.setSizePolicy(sizePolicy)
        self.butGenerateSp.setStyleSheet("QPushButton#butGenerateSp{\n"
"    qproperty-icon: url(:images/export.png);\n"
"}")
        self.butGenerateSp.setObjectName("butGenerateSp")
        self.gridLayout_2.addWidget(self.butGenerateSp, 6, 2, 1, 1)
        self.tabWidget_2 = QtWidgets.QTabWidget(self.frame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.tabWidget_2.sizePolicy().hasHeightForWidth())
        self.tabWidget_2.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setStyleStrategy(QtGui.QFont.PreferDefault)
        self.tabWidget_2.setFont(font)
        self.tabWidget_2.setUsesScrollButtons(True)
        self.tabWidget_2.setObjectName("tabWidget_2")
        self.tabSelect = QtWidgets.QWidget()
        self.tabSelect.setObjectName("tabSelect")
        self.gridLayout_9 = QtWidgets.QGridLayout(self.tabSelect)
        self.gridLayout_9.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_9.setObjectName("gridLayout_9")
        self.label_5 = QtWidgets.QLabel(self.tabSelect)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_5.sizePolicy().hasHeightForWidth())
        self.label_5.setSizePolicy(sizePolicy)
        self.label_5.setObjectName("label_5")
        self.gridLayout_9.addWidget(self.label_5, 2, 0, 1, 1)
        self.lineSpecies = QtWidgets.QLineEdit(self.tabSelect)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(1)
        sizePolicy.setHeightForWidth(self.lineSpecies.sizePolicy().hasHeightForWidth())
        self.lineSpecies.setSizePolicy(sizePolicy)
        self.lineSpecies.setBaseSize(QtCore.QSize(0, 40))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(18)
        font.setItalic(False)
        self.lineSpecies.setFont(font)
        self.lineSpecies.setAutoFillBackground(False)
        self.lineSpecies.setObjectName("lineSpecies")
        self.gridLayout_9.addWidget(self.lineSpecies, 3, 0, 1, 1)
        spacerItem = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_9.addItem(spacerItem, 1, 0, 1, 1)
        self.tabWidget_2.addTab(self.tabSelect, "")
        self.tabMerge = QtWidgets.QWidget()
        self.tabMerge.setObjectName("tabMerge")
        self.gridLayout_5 = QtWidgets.QGridLayout(self.tabMerge)
        self.gridLayout_5.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_5.setObjectName("gridLayout_5")
        self.labelMerge = QtWidgets.QLabel(self.tabMerge)
        self.labelMerge.setObjectName("labelMerge")
        self.gridLayout_5.addWidget(self.labelMerge, 0, 0, 1, 1)
        self.lineMergeChecklists = QtWidgets.QLineEdit(self.tabMerge)
        self.lineMergeChecklists.setObjectName("lineMergeChecklists")
        self.gridLayout_5.addWidget(self.lineMergeChecklists, 1, 0, 1, 1)
        self.butMergeChecklists = QtWidgets.QPushButton(self.tabMerge)
        self.butMergeChecklists.setObjectName("butMergeChecklists")
        self.gridLayout_5.addWidget(self.butMergeChecklists, 1, 1, 1, 1)
        self.butMerge = QtWidgets.QPushButton(self.tabMerge)
        self.butMerge.setObjectName("butMerge")
        self.gridLayout_5.addWidget(self.butMerge, 2, 1, 1, 1)
        self.tabWidget_2.addTab(self.tabMerge, "")
        self.tabCompare = QtWidgets.QWidget()
        self.tabCompare.setObjectName("tabCompare")
        self.gridLayout_6 = QtWidgets.QGridLayout(self.tabCompare)
        self.gridLayout_6.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_6.setObjectName("gridLayout_6")
        self.butCheckASelect = QtWidgets.QPushButton(self.tabCompare)
        self.butCheckASelect.setObjectName("butCheckASelect")
        self.gridLayout_6.addWidget(self.butCheckASelect, 1, 1, 1, 1)
        self.butCheckBSelect = QtWidgets.QPushButton(self.tabCompare)
        self.butCheckBSelect.setObjectName("butCheckBSelect")
        self.gridLayout_6.addWidget(self.butCheckBSelect, 1, 5, 1, 1)
        self.butCompare = QtWidgets.QPushButton(self.tabCompare)
        self.butCompare.setObjectName("butCompare")
        self.gridLayout_6.addWidget(self.butCompare, 3, 1, 1, 1)
        self.comboABDifference = QtWidgets.QComboBox(self.tabCompare)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.comboABDifference.sizePolicy().hasHeightForWidth())
        self.comboABDifference.setSizePolicy(sizePolicy)
        self.comboABDifference.setObjectName("comboABDifference")
        self.comboABDifference.addItem("")
        self.comboABDifference.addItem("")
        self.comboABDifference.addItem("")
        self.comboABDifference.addItem("")
        self.gridLayout_6.addWidget(self.comboABDifference, 3, 0, 1, 1)
        spacerItem1 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_6.addItem(spacerItem1, 1, 3, 1, 1)
        spacerItem2 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_6.addItem(spacerItem2, 1, 2, 1, 1)
        self.lineChecklistB = QtWidgets.QLineEdit(self.tabCompare)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.lineChecklistB.sizePolicy().hasHeightForWidth())
        self.lineChecklistB.setSizePolicy(sizePolicy)
        self.lineChecklistB.setObjectName("lineChecklistB")
        self.gridLayout_6.addWidget(self.lineChecklistB, 1, 4, 1, 1)
        self.labelChecklistB = QtWidgets.QLabel(self.tabCompare)
        self.labelChecklistB.setObjectName("labelChecklistB")
        self.gridLayout_6.addWidget(self.labelChecklistB, 0, 4, 1, 1)
        self.lineChecklistA = QtWidgets.QLineEdit(self.tabCompare)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.lineChecklistA.sizePolicy().hasHeightForWidth())
        self.lineChecklistA.setSizePolicy(sizePolicy)
        self.lineChecklistA.setObjectName("lineChecklistA")
        self.gridLayout_6.addWidget(self.lineChecklistA, 1, 0, 1, 1)
        self.labelChecklistA = QtWidgets.QLabel(self.tabCompare)
        self.labelChecklistA.setObjectName("labelChecklistA")
        self.gridLayout_6.addWidget(self.labelChecklistA, 0, 0, 1, 1)
        self.tabWidget_2.addTab(self.tabCompare, "")
        self.tabCombine = QtWidgets.QWidget()
        self.tabCombine.setObjectName("tabCombine")
        self.gridLayout_12 = QtWidgets.QGridLayout(self.tabCombine)
        self.gridLayout_12.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_12.setObjectName("gridLayout_12")
        self.labelCombine = QtWidgets.QLabel(self.tabCombine)
        self.labelCombine.setObjectName("labelCombine")
        self.gridLayout_12.addWidget(self.labelCombine, 0, 0, 1, 1)
        self.lineCombineChecklists = QtWidgets.QLineEdit(self.tabCombine)
        self.lineCombineChecklists.setObjectName("lineCombineChecklists")
        self.gridLayout_12.addWidget(self.lineCombineChecklists, 1, 0, 1, 1)
        self.butCombineChecklists = QtWidgets.QPushButton(self.tabCombine)
        self.butCombineChecklists.setObjectName("butCombineChecklists")
        self.gridLayout_12.addWidget(self.butCombineChecklists, 1, 1, 1, 1)
        self.tabWidget_2.addTab(self.tabCombine, "")
        self.tab_3 = QtWidgets.QWidget()
        self.tab_3.setObjectName("tab_3")
        self.gridLayout_3 = QtWidgets.QGridLayout(self.tab_3)
        self.gridLayout_3.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_3.setObjectName("gridLayout_3")
        self.lineExcelColnum = QtWidgets.QLineEdit(self.tab_3)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.lineExcelColnum.sizePolicy().hasHeightForWidth())
        self.lineExcelColnum.setSizePolicy(sizePolicy)
        self.lineExcelColnum.setObjectName("lineExcelColnum")
        self.gridLayout_3.addWidget(self.lineExcelColnum, 3, 1, 1, 1)
        self.checkBox = QtWidgets.QCheckBox(self.tab_3)
        self.checkBox.setChecked(True)
        self.checkBox.setObjectName("checkBox")
        self.gridLayout_3.addWidget(self.checkBox, 3, 2, 1, 1)
        self.labelFormatNames = QtWidgets.QLabel(self.tab_3)
        self.labelFormatNames.setObjectName("labelFormatNames")
        self.gridLayout_3.addWidget(self.labelFormatNames, 0, 0, 1, 2)
        self.labelColNumber = QtWidgets.QLabel(self.tab_3)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.labelColNumber.sizePolicy().hasHeightForWidth())
        self.labelColNumber.setSizePolicy(sizePolicy)
        self.labelColNumber.setObjectName("labelColNumber")
        self.gridLayout_3.addWidget(self.labelColNumber, 3, 0, 1, 1)
        self.butFormatName = QtWidgets.QPushButton(self.tab_3)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.butFormatName.sizePolicy().hasHeightForWidth())
        self.butFormatName.setSizePolicy(sizePolicy)
        self.butFormatName.setObjectName("butFormatName")
        self.gridLayout_3.addWidget(self.butFormatName, 3, 3, 1, 1)
        self.lineExcelFilePath = QtWidgets.QLineEdit(self.tab_3)
        self.lineExcelFilePath.setText("")
        self.lineExcelFilePath.setObjectName("lineExcelFilePath")
        self.gridLayout_3.addWidget(self.lineExcelFilePath, 2, 0, 1, 2)
        self.butSelectExcel = QtWidgets.QPushButton(self.tab_3)
        self.butSelectExcel.setObjectName("butSelectExcel")
        self.gridLayout_3.addWidget(self.butSelectExcel, 2, 2, 1, 1)
        self.tabWidget_2.addTab(self.tab_3, "")
        self.gridLayout_2.addWidget(self.tabWidget_2, 2, 0, 1, 3)
        self.butSlist = QtWidgets.QPushButton(self.frame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.butSlist.sizePolicy().hasHeightForWidth())
        self.butSlist.setSizePolicy(sizePolicy)
        self.butSlist.setObjectName("butSlist")
        self.gridLayout_2.addWidget(self.butSlist, 1, 2, 1, 1)
        self.scrollArea_2 = QtWidgets.QScrollArea(self.frame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.scrollArea_2.sizePolicy().hasHeightForWidth())
        self.scrollArea_2.setSizePolicy(sizePolicy)
        self.scrollArea_2.setMinimumSize(QtCore.QSize(0, 100))
        self.scrollArea_2.setWidgetResizable(True)
        self.scrollArea_2.setObjectName("scrollArea_2")
        self.scrollAreaWidgetContents_2 = QtWidgets.QWidget()
        self.scrollAreaWidgetContents_2.setGeometry(QtCore.QRect(0, 0, 590, 98))
        self.scrollAreaWidgetContents_2.setObjectName("scrollAreaWidgetContents_2")
        self.gridLayout_10 = QtWidgets.QGridLayout(self.scrollAreaWidgetContents_2)
        self.gridLayout_10.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_10.setObjectName("gridLayout_10")
        self.label = QtWidgets.QLabel(self.scrollAreaWidgetContents_2)
        self.label.setObjectName("label")
        self.gridLayout_10.addWidget(self.label, 0, 0, 1, 1)
        self.textBrowserInfo = QtWidgets.QTextBrowser(self.scrollAreaWidgetContents_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.textBrowserInfo.sizePolicy().hasHeightForWidth())
        self.textBrowserInfo.setSizePolicy(sizePolicy)
        self.textBrowserInfo.setMinimumSize(QtCore.QSize(0, 50))
        self.textBrowserInfo.setSizeAdjustPolicy(QtWidgets.QAbstractScrollArea.AdjustToContents)
        self.textBrowserInfo.setOpenExternalLinks(True)
        self.textBrowserInfo.setObjectName("textBrowserInfo")
        self.gridLayout_10.addWidget(self.textBrowserInfo, 1, 0, 1, 1)
        self.scrollArea_2.setWidget(self.scrollAreaWidgetContents_2)
        self.gridLayout_2.addWidget(self.scrollArea_2, 3, 0, 1, 3)
        self.lineSlist = QtWidgets.QLineEdit(self.frame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.lineSlist.sizePolicy().hasHeightForWidth())
        self.lineSlist.setSizePolicy(sizePolicy)
        self.lineSlist.setObjectName("lineSlist")
        self.gridLayout_2.addWidget(self.lineSlist, 1, 1, 1, 1)
        self.gridLayout_7.addWidget(self.frame, 0, 0, 1, 1)
        self.tabWidget.addTab(self.TaxaSelection, "")
        self.tab = QtWidgets.QWidget()
        self.tab.setObjectName("tab")
        self.gridLayout_8 = QtWidgets.QGridLayout(self.tab)
        self.gridLayout_8.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_8.setObjectName("gridLayout_8")
        self.butViewTable = QtWidgets.QPushButton(self.tab)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.butViewTable.sizePolicy().hasHeightForWidth())
        self.butViewTable.setSizePolicy(sizePolicy)
        self.butViewTable.setMinimumSize(QtCore.QSize(108, 0))
        self.butViewTable.setObjectName("butViewTable")
        self.gridLayout_8.addWidget(self.butViewTable, 2, 3, 1, 1)
        self.comboDBTables = QtWidgets.QComboBox(self.tab)
        self.comboDBTables.setObjectName("comboDBTables")
        self.gridLayout_8.addWidget(self.comboDBTables, 2, 1, 1, 1)
        self.comboDBselect = QtWidgets.QComboBox(self.tab)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.comboDBselect.sizePolicy().hasHeightForWidth())
        self.comboDBselect.setSizePolicy(sizePolicy)
        self.comboDBselect.setObjectName("comboDBselect")
        self.comboDBselect.addItem("")
        self.comboDBselect.addItem("")
        self.comboDBselect.addItem("")
        self.comboDBselect.addItem("")
        self.gridLayout_8.addWidget(self.comboDBselect, 0, 1, 1, 1)
        self.labelDatabase = QtWidgets.QLabel(self.tab)
        self.labelDatabase.setObjectName("labelDatabase")
        self.gridLayout_8.addWidget(self.labelDatabase, 0, 0, 1, 1)
        self.butUpdateDB = QtWidgets.QPushButton(self.tab)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.butUpdateDB.sizePolicy().hasHeightForWidth())
        self.butUpdateDB.setSizePolicy(sizePolicy)
        self.butUpdateDB.setObjectName("butUpdateDB")
        self.gridLayout_8.addWidget(self.butUpdateDB, 0, 3, 1, 1)
        self.labelRawTable = QtWidgets.QLabel(self.tab)
        self.labelRawTable.setObjectName("labelRawTable")
        self.gridLayout_8.addWidget(self.labelRawTable, 2, 0, 1, 1)
        self.treeWidgetDB = QtWidgets.QTreeWidget(self.tab)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.treeWidgetDB.sizePolicy().hasHeightForWidth())
        self.treeWidgetDB.setSizePolicy(sizePolicy)
        self.treeWidgetDB.setMinimumSize(QtCore.QSize(0, 150))
        self.treeWidgetDB.setMouseTracking(False)
        self.treeWidgetDB.setAlternatingRowColors(True)
        self.treeWidgetDB.setSelectionMode(QtWidgets.QAbstractItemView.MultiSelection)
        self.treeWidgetDB.setIndentation(10)
        self.treeWidgetDB.setRootIsDecorated(True)
        self.treeWidgetDB.setAnimated(True)
        self.treeWidgetDB.setObjectName("treeWidgetDB")
        self.treeWidgetDB.headerItem().setText(0, "1")
        self.treeWidgetDB.header().setVisible(False)
        self.treeWidgetDB.header().setDefaultSectionSize(60)
        self.treeWidgetDB.header().setHighlightSections(True)
        self.treeWidgetDB.header().setMinimumSectionSize(5)
        self.treeWidgetDB.header().setSortIndicatorShown(True)
        self.gridLayout_8.addWidget(self.treeWidgetDB, 3, 0, 1, 4)
        self.line = QtWidgets.QFrame(self.tab)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.line.sizePolicy().hasHeightForWidth())
        self.line.setSizePolicy(sizePolicy)
        self.line.setFrameShape(QtWidgets.QFrame.HLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line.setObjectName("line")
        self.gridLayout_8.addWidget(self.line, 1, 0, 1, 4)
        spacerItem3 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_8.addItem(spacerItem3, 2, 2, 1, 1)
        spacerItem4 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_8.addItem(spacerItem4, 0, 2, 1, 1)
        self.butUpdateDB.raise_()
        self.comboDBselect.raise_()
        self.treeWidgetDB.raise_()
        self.comboDBTables.raise_()
        self.labelRawTable.raise_()
        self.labelDatabase.raise_()
        self.butViewTable.raise_()
        self.line.raise_()
        self.tabWidget.addTab(self.tab, "")
        self.gridLayout_4.addWidget(self.tabWidget, 1, 0, 1, 1)
        self.scrollArea.setWidget(self.scrollAreaWidgetContents)
        self.gridLayout.addWidget(self.scrollArea, 0, 1, 1, 1)
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 710, 22))
        self.menubar.setObjectName("menubar")
        self.menuFile = QtWidgets.QMenu(self.menubar)
        self.menuFile.setObjectName("menuFile")
        self.menuEdit = QtWidgets.QMenu(self.menubar)
        self.menuEdit.setObjectName("menuEdit")
        self.menuHelp = QtWidgets.QMenu(self.menubar)
        self.menuHelp.setToolTipsVisible(True)
        self.menuHelp.setObjectName("menuHelp")
        self.menuWindow = QtWidgets.QMenu(self.menubar)
        self.menuWindow.setObjectName("menuWindow")
        self.menuView = QtWidgets.QMenu(self.menubar)
        self.menuView.setObjectName("menuView")
        MainWindow.setMenuBar(self.menubar)
        self.toolBar = QtWidgets.QToolBar(MainWindow)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(1)
        sizePolicy.setHeightForWidth(self.toolBar.sizePolicy().hasHeightForWidth())
        self.toolBar.setSizePolicy(sizePolicy)
        self.toolBar.setMouseTracking(False)
        self.toolBar.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.toolBar.setStyleSheet("QToolBar{spacing: 0px;}")
        self.toolBar.setAllowedAreas(QtCore.Qt.AllToolBarAreas)
        self.toolBar.setIconSize(QtCore.QSize(40, 40))
        self.toolBar.setFloatable(True)
        self.toolBar.setObjectName("toolBar")
        MainWindow.addToolBar(QtCore.Qt.TopToolBarArea, self.toolBar)
        self.toolBar_2 = QtWidgets.QToolBar(MainWindow)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.toolBar_2.sizePolicy().hasHeightForWidth())
        self.toolBar_2.setSizePolicy(sizePolicy)
        self.toolBar_2.setAutoFillBackground(True)
        self.toolBar_2.setStyleSheet("QToolBar_2{spacing: 0px;}")
        self.toolBar_2.setIconSize(QtCore.QSize(40, 40))
        self.toolBar_2.setObjectName("toolBar_2")
        MainWindow.addToolBar(QtCore.Qt.TopToolBarArea, self.toolBar_2)
        self.actionSelectExport = QtWidgets.QAction(MainWindow)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(":/icons/export.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionSelectExport.setIcon(icon)
        self.actionSelectExport.setIconVisibleInMenu(False)
        self.actionSelectExport.setObjectName("actionSelectExport")
        self.actionBatch = QtWidgets.QAction(MainWindow)
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap(":/icons/batch.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionBatch.setIcon(icon1)
        self.actionBatch.setIconVisibleInMenu(False)
        self.actionBatch.setObjectName("actionBatch")
        self.actionDeleteSel = QtWidgets.QAction(MainWindow)
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap(":/icons/delete.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionDeleteSel.setIcon(icon2)
        self.actionDeleteSel.setIconVisibleInMenu(False)
        self.actionDeleteSel.setObjectName("actionDeleteSel")
        self.actionDeleteAll = QtWidgets.QAction(MainWindow)
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap(":/icons/delete_all.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionDeleteAll.setIcon(icon3)
        self.actionDeleteAll.setIconVisibleInMenu(False)
        self.actionDeleteAll.setObjectName("actionDeleteAll")
        self.actionClearSp = QtWidgets.QAction(MainWindow)
        self.actionClearSp.setObjectName("actionClearSp")
        self.actionHomepage = QtWidgets.QAction(MainWindow)
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap(":/icons/home.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionHomepage.setIcon(icon4)
        self.actionHomepage.setIconVisibleInMenu(False)
        self.actionHomepage.setObjectName("actionHomepage")
        self.actionReportIssues = QtWidgets.QAction(MainWindow)
        icon5 = QtGui.QIcon()
        icon5.addPixmap(QtGui.QPixmap(":/icons/bug_report.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionReportIssues.setIcon(icon5)
        self.actionReportIssues.setIconVisibleInMenu(False)
        self.actionReportIssues.setObjectName("actionReportIssues")
        self.actionAbout = QtWidgets.QAction(MainWindow)
        self.actionAbout.setIconVisibleInMenu(False)
        self.actionAbout.setObjectName("actionAbout")
        self.actionQuit = QtWidgets.QAction(MainWindow)
        self.actionQuit.setObjectName("actionQuit")
        self.actionMinimize = QtWidgets.QAction(MainWindow)
        self.actionMinimize.setObjectName("actionMinimize")
        self.actionZoom = QtWidgets.QAction(MainWindow)
        self.actionZoom.setObjectName("actionZoom")
        self.actionMaximize = QtWidgets.QAction(MainWindow)
        self.actionMaximize.setObjectName("actionMaximize")
        self.actionTropicos = QtWidgets.QAction(MainWindow)
        icon6 = QtGui.QIcon()
        icon6.addPixmap(QtGui.QPixmap(":/icons/tropicos.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionTropicos.setIcon(icon6)
        self.actionTropicos.setIconVisibleInMenu(False)
        self.actionTropicos.setObjectName("actionTropicos")
        self.actionSaveTxt = QtWidgets.QAction(MainWindow)
        icon7 = QtGui.QIcon()
        icon7.addPixmap(QtGui.QPixmap(":/icons/save_txt.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionSaveTxt.setIcon(icon7)
        self.actionSaveTxt.setIconVisibleInMenu(False)
        self.actionSaveTxt.setObjectName("actionSaveTxt")
        self.actionExportChecklist = QtWidgets.QAction(MainWindow)
        icon8 = QtGui.QIcon()
        icon8.addPixmap(QtGui.QPixmap(":/icons/execute_export.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionExportChecklist.setIcon(icon8)
        self.actionExportChecklist.setIconVisibleInMenu(False)
        self.actionExportChecklist.setObjectName("actionExportChecklist")
        self.actionNomenMatch = QtWidgets.QAction(MainWindow)
        icon9 = QtGui.QIcon()
        icon9.addPixmap(QtGui.QPixmap(":/icons/nomenmatch.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionNomenMatch.setIcon(icon9)
        self.actionNomenMatch.setObjectName("actionNomenMatch")
        self.actionAddSpecies = QtWidgets.QAction(MainWindow)
        icon10 = QtGui.QIcon()
        icon10.addPixmap(QtGui.QPixmap(":/icons/addspecies_32x32.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionAddSpecies.setIcon(icon10)
        self.actionAddSpecies.setIconVisibleInMenu(False)
        self.actionAddSpecies.setObjectName("actionAddSpecies")
        self.actionShowToolbarText = QtWidgets.QAction(MainWindow)
        self.actionShowToolbarText.setCheckable(True)
        self.actionShowToolbarText.setObjectName("actionShowToolbarText")
        self.actionDeselectAll = QtWidgets.QAction(MainWindow)
        icon11 = QtGui.QIcon()
        icon11.addPixmap(QtGui.QPixmap(":/icons/deselect.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionDeselectAll.setIcon(icon11)
        self.actionDeselectAll.setIconVisibleInMenu(False)
        self.actionDeselectAll.setObjectName("actionDeselectAll")
        self.actionSelectAll = QtWidgets.QAction(MainWindow)
        icon12 = QtGui.QIcon()
        icon12.addPixmap(QtGui.QPixmap(":/icons/select_all.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionSelectAll.setIcon(icon12)
        self.actionSelectAll.setIconVisibleInMenu(False)
        self.actionSelectAll.setObjectName("actionSelectAll")
        self.menuFile.addAction(self.actionSelectExport)
        self.menuFile.addAction(self.actionSaveTxt)
        self.menuFile.addAction(self.actionBatch)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionExportChecklist)
        self.menuFile.addAction(self.actionQuit)
        self.menuEdit.addAction(self.actionAddSpecies)
        self.menuEdit.addAction(self.actionClearSp)
        self.menuEdit.addSeparator()
        self.menuEdit.addAction(self.actionDeleteSel)
        self.menuEdit.addAction(self.actionDeleteAll)
        self.menuEdit.addAction(self.actionDeselectAll)
        self.menuEdit.addAction(self.actionSelectAll)
        self.menuHelp.addAction(self.actionAbout)
        self.menuHelp.addAction(self.actionHomepage)
        self.menuHelp.addAction(self.actionReportIssues)
        self.menuWindow.addAction(self.actionMinimize)
        self.menuWindow.addAction(self.actionMaximize)
        self.menuWindow.addAction(self.actionZoom)
        self.menuView.addAction(self.actionShowToolbarText)
        self.menubar.addAction(self.menuFile.menuAction())
        self.menubar.addAction(self.menuEdit.menuAction())
        self.menubar.addAction(self.menuView.menuAction())
        self.menubar.addAction(self.menuWindow.menuAction())
        self.menubar.addAction(self.menuHelp.menuAction())
        self.toolBar.addAction(self.actionSaveTxt)
        self.toolBar.addAction(self.actionSelectExport)
        self.toolBar.addAction(self.actionBatch)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.actionAddSpecies)
        self.toolBar.addAction(self.actionDeleteSel)
        self.toolBar.addAction(self.actionDeleteAll)
        self.toolBar.addAction(self.actionSelectAll)
        self.toolBar.addAction(self.actionDeselectAll)
        self.toolBar.addAction(self.actionExportChecklist)
        self.toolBar_2.addAction(self.actionTropicos)
        self.toolBar_2.addAction(self.actionNomenMatch)
        self.toolBar_2.addSeparator()
        self.toolBar_2.addAction(self.actionHomepage)
        self.toolBar_2.addAction(self.actionReportIssues)

        self.retranslateUi(MainWindow)
        self.tabWidget.setCurrentIndex(0)
        self.tabWidget_2.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "checklister: a species checklist generator"))
        self.labelExportFile.setText(_translate("MainWindow", "Select Export File"))
        self.treeWidget.setSortingEnabled(True)
        self.treeWidget.headerItem().setText(0, _translate("MainWindow", "Family"))
        self.treeWidget.headerItem().setText(1, _translate("MainWindow", "FullNameWithAuthors"))
        self.treeWidget.headerItem().setText(2, _translate("MainWindow", "Common name"))
        self.butSelectOutput.setToolTip(_translate("MainWindow", "<html><head/><body><p>Select export checklist file. Supported file formats: Microsoft Word 2007 (.docx), Open document format (.odt), markdown (.md). Default is docx and markdown.</p></body></html>"))
        self.butSelectOutput.setText(_translate("MainWindow", "Select file ..."))
        self.labelBatch.setText(_translate("MainWindow", "Batch Export File"))
        self.butGenerateSp.setText(_translate("MainWindow", "Export"))
        self.label_5.setText(_translate("MainWindow", "Common name/scientific name/family"))
        self.lineSpecies.setToolTip(_translate("MainWindow", "<html><head/><body><p>Input species name. Type part of common names/epithets/family to list similar names. </p><p>You can press enter or return to add it to the checklist.</p></body></html>"))
        self.tabWidget_2.setTabText(self.tabWidget_2.indexOf(self.tabSelect), _translate("MainWindow", "Select taxa"))
        self.labelMerge.setText(_translate("MainWindow", "To be merged checklists"))
        self.butMergeChecklists.setText(_translate("MainWindow", "Select file ..."))
        self.butMerge.setText(_translate("MainWindow", "Merge"))
        self.tabWidget_2.setTabText(self.tabWidget_2.indexOf(self.tabMerge), _translate("MainWindow", "Merge"))
        self.butCheckASelect.setText(_translate("MainWindow", "Select file ..."))
        self.butCheckBSelect.setText(_translate("MainWindow", "Select file ..."))
        self.butCompare.setText(_translate("MainWindow", "Compare"))
        self.comboABDifference.setItemText(0, _translate("MainWindow", "A differ B (A - B)"))
        self.comboABDifference.setItemText(1, _translate("MainWindow", "B differ A (B - A)"))
        self.comboABDifference.setItemText(2, _translate("MainWindow", "A intersects B (A ∩ B )"))
        self.comboABDifference.setItemText(3, _translate("MainWindow", "A union B (A ∪ B)"))
        self.labelChecklistB.setText(_translate("MainWindow", "Checklist B"))
        self.labelChecklistA.setText(_translate("MainWindow", "Checklist A"))
        self.tabWidget_2.setTabText(self.tabWidget_2.indexOf(self.tabCompare), _translate("MainWindow", "Compare"))
        self.labelCombine.setText(_translate("MainWindow", "To be combined checklists"))
        self.butCombineChecklists.setText(_translate("MainWindow", "Select file ..."))
        self.tabWidget_2.setTabText(self.tabWidget_2.indexOf(self.tabCombine), _translate("MainWindow", "Combine"))
        self.lineExcelColnum.setText(_translate("MainWindow", "1"))
        self.checkBox.setText(_translate("MainWindow", "with header"))
        self.labelFormatNames.setText(_translate("MainWindow", "Choose file to format names:"))
        self.labelColNumber.setText(_translate("MainWindow", "Column number"))
        self.butFormatName.setText(_translate("MainWindow", "Format"))
        self.butSelectExcel.setToolTip(_translate("MainWindow", "<html><head/><body><p>Select export checklist file. Supported file formats: Microsoft Word 2007 (.docx), Open document format (.odt), markdown (.md). Default is docx and markdown.</p></body></html>"))
        self.butSelectExcel.setText(_translate("MainWindow", "Select file ..."))
        self.tabWidget_2.setTabText(self.tabWidget_2.indexOf(self.tab_3), _translate("MainWindow", "Format"))
        self.butSlist.setText(_translate("MainWindow", "Select file ..."))
        self.label.setText(_translate("MainWindow", "Taxon Info"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.TaxaSelection), _translate("MainWindow", "Taxa selection"))
        self.butViewTable.setToolTip(_translate("MainWindow", "<html><head/><body><p>Update the checklist database</p></body></html>"))
        self.butViewTable.setText(_translate("MainWindow", "View"))
        self.comboDBselect.setItemText(0, _translate("MainWindow", "Vascular plants of Taiwan (phylogeny-based)"))
        self.comboDBselect.setItemText(1, _translate("MainWindow", "Vascular plants of Taiwan (Flora of Taiwan 2nd Edi.)"))
        self.comboDBselect.setItemText(2, _translate("MainWindow", "Bird list of Taiwan (2014)"))
        self.comboDBselect.setItemText(3, _translate("MainWindow", "Plants of Japan (Ylist)"))
        self.labelDatabase.setText(_translate("MainWindow", "Checklist Database"))
        self.butUpdateDB.setToolTip(_translate("MainWindow", "<html><head/><body><p>Update the checklist database</p></body></html>"))
        self.butUpdateDB.setText(_translate("MainWindow", "Update DB"))
        self.labelRawTable.setText(_translate("MainWindow", "Raw Table"))
        self.treeWidgetDB.setSortingEnabled(True)
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab), _translate("MainWindow", "Databases"))
        self.menuFile.setTitle(_translate("MainWindow", "&File"))
        self.menuEdit.setTitle(_translate("MainWindow", "&Edit"))
        self.menuHelp.setTitle(_translate("MainWindow", "&Help"))
        self.menuWindow.setTitle(_translate("MainWindow", "&Window"))
        self.menuView.setTitle(_translate("MainWindow", "View"))
        self.toolBar.setWindowTitle(_translate("MainWindow", "Edit Toolbar"))
        self.toolBar_2.setWindowTitle(_translate("MainWindow", "Search Toolbar"))
        self.actionSelectExport.setText(_translate("MainWindow", "Select export file"))
        self.actionSelectExport.setIconText(_translate("MainWindow", "Select export file"))
        self.actionSelectExport.setToolTip(_translate("MainWindow", "Select export File"))
        self.actionSelectExport.setShortcut(_translate("MainWindow", "Ctrl+O"))
        self.actionBatch.setText(_translate("MainWindow", "Batch export"))
        self.actionBatch.setIconText(_translate("MainWindow", "Batch export"))
        self.actionBatch.setShortcut(_translate("MainWindow", "Ctrl+B"))
        self.actionDeleteSel.setText(_translate("MainWindow", "Delete selected"))
        self.actionDeleteSel.setShortcut(_translate("MainWindow", "Ctrl+D"))
        self.actionDeleteAll.setText(_translate("MainWindow", "Delete all"))
        self.actionDeleteAll.setShortcut(_translate("MainWindow", "Ctrl+Shift+D"))
        self.actionClearSp.setText(_translate("MainWindow", "Clear taxa"))
        self.actionClearSp.setShortcut(_translate("MainWindow", "Esc"))
        self.actionHomepage.setText(_translate("MainWindow", "Homepage"))
        self.actionHomepage.setShortcut(_translate("MainWindow", "Ctrl+Shift+H"))
        self.actionReportIssues.setText(_translate("MainWindow", "Report issues"))
        self.actionReportIssues.setToolTip(_translate("MainWindow", "Bug report"))
        self.actionReportIssues.setShortcut(_translate("MainWindow", "Ctrl+Shift+R"))
        self.actionAbout.setText(_translate("MainWindow", "About"))
        self.actionQuit.setText(_translate("MainWindow", "Quit"))
        self.actionMinimize.setText(_translate("MainWindow", "Minimize"))
        self.actionMinimize.setIconText(_translate("MainWindow", "Minimize window"))
        self.actionMinimize.setShortcut(_translate("MainWindow", "Ctrl+M"))
        self.actionZoom.setText(_translate("MainWindow", "Zoom"))
        self.actionZoom.setShortcut(_translate("MainWindow", "Ctrl+N"))
        self.actionMaximize.setText(_translate("MainWindow", "Maximize"))
        self.actionMaximize.setShortcut(_translate("MainWindow", "Ctrl+Shift+M"))
        self.actionTropicos.setText(_translate("MainWindow", "Search Tropicos"))
        self.actionTropicos.setToolTip(_translate("MainWindow", "Search Tropicos database"))
        self.actionTropicos.setShortcut(_translate("MainWindow", "Ctrl+T"))
        self.actionSaveTxt.setText(_translate("MainWindow", "&Save species txtfile"))
        self.actionSaveTxt.setShortcut(_translate("MainWindow", "Ctrl+S"))
        self.actionExportChecklist.setText(_translate("MainWindow", "Export checklist!"))
        self.actionExportChecklist.setShortcut(_translate("MainWindow", "Ctrl+E"))
        self.actionNomenMatch.setText(_translate("MainWindow", "Search NomenMatch"))
        self.actionNomenMatch.setToolTip(_translate("MainWindow", "Search NomenMatch database"))
        self.actionNomenMatch.setShortcut(_translate("MainWindow", "Ctrl+J"))
        self.actionAddSpecies.setText(_translate("MainWindow", "Add taxa"))
        self.actionAddSpecies.setShortcut(_translate("MainWindow", "Ctrl+Return"))
        self.actionShowToolbarText.setText(_translate("MainWindow", "Show toolbar text"))
        self.actionShowToolbarText.setShortcut(_translate("MainWindow", "Ctrl+Shift+T"))
        self.actionDeselectAll.setText(_translate("MainWindow", "Deselect all species"))
        self.actionDeselectAll.setToolTip(_translate("MainWindow", "Deselect all taxa"))
        self.actionDeselectAll.setShortcut(_translate("MainWindow", "Ctrl+Shift+S"))
        self.actionSelectAll.setText(_translate("MainWindow", "Select all taxa"))
        self.actionSelectAll.setShortcut(_translate("MainWindow", "Ctrl+A"))

import iconResources_rc
